/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "ERC20Snapshot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Snapshot__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "GameRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GameRewards__factory>;
    getContractFactory(
      name: "IGameRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGameRewards__factory>;
    getContractFactory(
      name: "IItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IItem__factory>;
    getContractFactory(
      name: "IMetallic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMetallic__factory>;
    getContractFactory(
      name: "IPokemonGame",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPokemonGame__factory>;
    getContractFactory(
      name: "Item",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Item__factory>;
    getContractFactory(
      name: "ItemData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ItemData__factory>;
    getContractFactory(
      name: "ItemMarket",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ItemMarket__factory>;
    getContractFactory(
      name: "Metallic",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Metallic__factory>;
    getContractFactory(
      name: "PokemonAttack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PokemonAttack__factory>;
    getContractFactory(
      name: "PokemonData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PokemonData__factory>;
    getContractFactory(
      name: "PokemonFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PokemonFactory__factory>;
    getContractFactory(
      name: "PokemonGame",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PokemonGame__factory>;
    getContractFactory(
      name: "PokemonHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PokemonHelper__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "ERC20Snapshot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Snapshot>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "GameRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GameRewards>;
    getContractAt(
      name: "IGameRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGameRewards>;
    getContractAt(
      name: "IItem",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IItem>;
    getContractAt(
      name: "IMetallic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMetallic>;
    getContractAt(
      name: "IPokemonGame",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPokemonGame>;
    getContractAt(
      name: "Item",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Item>;
    getContractAt(
      name: "ItemData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ItemData>;
    getContractAt(
      name: "ItemMarket",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ItemMarket>;
    getContractAt(
      name: "Metallic",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Metallic>;
    getContractAt(
      name: "PokemonAttack",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PokemonAttack>;
    getContractAt(
      name: "PokemonData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PokemonData>;
    getContractAt(
      name: "PokemonFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PokemonFactory>;
    getContractAt(
      name: "PokemonGame",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PokemonGame>;
    getContractAt(
      name: "PokemonHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PokemonHelper>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
