/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019dd380380620019dd83398101604081905262000034916200017e565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b505050620002f8565b82805462000076906200026c565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b6000620001256200011f846200020c565b620001ed565b9050828152602081018484840111156200013e57600080fd5b6200014b84828562000239565b509392505050565b600082601f83011262000164578081fd5b8151620001768482602086016200010e565b949350505050565b6000806040838503121562000191578182fd5b828201516001600160401b03811115620001a9578283fd5b620001b78582860162000153565b602085015190935090506001600160401b03811115620001d5578182fd5b620001e38582860162000153565b9150509250929050565b6000620001f960405190565b90506200020782826200029d565b919050565b60006001600160401b03821115620002285762000228620002e2565b601f19601f83011660200192915050565b60005b83811015620002565781810151838201526020016200023c565b8381111562000266576000848401525b50505050565b6002810460018216806200028157607f821691505b60208210811415620002975762000297620002cc565b50919050565b601f19601f83011681016001600160401b0381118282101715620002c557620002c5620002e2565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6116d580620003086000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b8578063b88d4fde146101cb578063c87b56dd146101de578063e985e9c5146101f157600080fd5b80636352211e1461017d57806370a082311461019057806395d89b41146101b057600080fd5b8063095ea7b3116100bd578063095ea7b31461014257806323b872dd1461015757806342842e0e1461016a57600080fd5b806301ffc9a7146100e457806306fdde031461010d578063081812fc14610122575b600080fd5b6100f76100f2366004610e6e565b61022d565b6040516101049190611368565b60405180910390f35b610115610312565b6040516101049190611376565b610135610130366004610ea8565b6103a4565b6040516101049190611316565b610155610150366004610e40565b6103fd565b005b610155610165366004610d51565b6104a1565b610155610178366004610d51565b6104d2565b61013561018b366004610ea8565b6104ed565b6101a361019e366004610cfc565b610522565b6040516101049190611472565b610115610566565b6101556101c6366004610e12565b610575565b6101556101d9366004610d9c565b610584565b6101156101ec366004610ea8565b6105bc565b6100f76101ff366004610d19565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102c057507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061030c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461032190611553565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611553565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103e15760405162461bcd60e51b81526004016103d890611432565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610408826104ed565b9050806001600160a01b0316836001600160a01b0316141561043c5760405162461bcd60e51b81526004016103d890611452565b336001600160a01b038216148061047657506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6104925760405162461bcd60e51b81526004016103d890611402565b61049c838361065c565b505050565b6104ab33826106e2565b6104c75760405162461bcd60e51b81526004016103d890611462565b61049c838383610794565b61049c83838360405180602001604052806000815250610584565b6000818152600260205260408120546001600160a01b03168061030c5760405162461bcd60e51b81526004016103d890611422565b60006001600160a01b03821661054a5760405162461bcd60e51b81526004016103d890611412565b506001600160a01b031660009081526003602052604090205490565b60606001805461032190611553565b6105803383836108ce565b5050565b61058e33836106e2565b6105aa5760405162461bcd60e51b81526004016103d890611462565b6105b68484848461098f565b50505050565b6000818152600260205260409020546060906001600160a01b03166105f35760405162461bcd60e51b81526004016103d890611442565b600061060a60408051602081019091526000815290565b9050600081511161062a5760405180602001604052806000815250610655565b80610634846109c2565b604051602001610645929190611300565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03841690811790915581906106a9826104ed565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166107165760405162461bcd60e51b81526004016103d8906113f2565b6000610721836104ed565b9050806001600160a01b0316846001600160a01b0316148061075c5750836001600160a01b0316610751846103a4565b6001600160a01b0316145b8061078c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166107a7826104ed565b6001600160a01b0316146107cd5760405162461bcd60e51b81526004016103d890611397565b6001600160a01b0382166107f35760405162461bcd60e51b81526004016103d8906113a7565b6107fe60008261065c565b6001600160a01b03831660009081526003602052604081208054600192906108279084906114f3565b90915550506001600160a01b03821660009081526003602052604081208054600192906108559084906114c7565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031614156109005760405162461bcd60e51b81526004016103d8906113b7565b6001600160a01b038381166000818152600560209081526040808320948716808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610982908590611368565b60405180910390a3505050565b61099a848484610794565b6109a684848484610b10565b6105b65760405162461bcd60e51b81526004016103d890611387565b606081610a0257505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610a2c5780610a16816115ad565b9150610a259050600a836114df565b9150610a06565b60008167ffffffffffffffff811115610a5557634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610a7f576020820181803683370190505b5090505b841561078c57610a946001836114f3565b9150610aa1600a866115e6565b610aac9060306114c7565b60f81b818381518110610acf57634e487b7160e01b600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610b09600a866114df565b9450610a83565b60006001600160a01b0384163b15610c5c576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a0290610b6d903390899088908890600401611324565b602060405180830381600087803b158015610b8757600080fd5b505af1925050508015610bb7575060408051601f3d908101601f19168201909252610bb491810190610e8b565b60015b610c11573d808015610be5576040519150601f19603f3d011682016040523d82523d6000602084013e610bea565b606091505b508051610c095760405162461bcd60e51b81526004016103d890611387565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014905061078c565b506001949350505050565b6000610c7a610c758461149c565b611480565b905082815260208101848484011115610c9257600080fd5b610c9d84828561151b565b509392505050565b803561030c81611652565b803561030c81611669565b803561030c81611671565b805161030c81611671565b600082601f830112610ce1578081fd5b813561078c848260208601610c67565b803561030c81611699565b600060208284031215610d0d578081fd5b61065583828401610ca5565b60008060408385031215610d2b578081fd5b610d3784828501610ca5565b91506020610d4785828601610ca5565b9150509250929050565b600080600060608486031215610d65578081fd5b610d7185828601610ca5565b92506020610d8186828701610ca5565b9250506040610d9286828701610cf1565b9150509250925092565b60008060008060808587031215610db1578081fd5b610dbd86828701610ca5565b93506020610dcd87828801610ca5565b9350506040610dde87828801610cf1565b925050606085013567ffffffffffffffff811115610dfa578182fd5b610e0687828801610cd1565b91505092959194509250565b60008060408385031215610e24578182fd5b610e3084838501610ca5565b91506020610d4785828601610cb0565b60008060408385031215610e52578182fd5b610e5e84838501610ca5565b91506020610d4785828601610cf1565b600060208284031215610e7f578081fd5b61065583828401610cbb565b600060208284031215610e9c578081fd5b61065583828401610cc6565b600060208284031215610eb9578081fd5b61065583828401610cf1565b610ece8161150a565b82525050565b801515610ece565b6000610ee6825190565b808452602084019350610efd818560208601611527565b601f01601f19169290920192915050565b6000610f18825190565b610f26818560208601611527565b9290920192915050565b60328152602081017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015290505b60400190565b60258152602081017f4552433732313a207472616e736665722066726f6d20696e636f72726563742081527f6f776e657200000000000000000000000000000000000000000000000000000060208201529050610f84565b60248152602081017f4552433732313a207472616e7366657220746f20746865207a65726f2061646481527f726573730000000000000000000000000000000000000000000000000000000060208201529050610f84565b602c8152602081017f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881527f697374656e7420746f6b656e000000000000000000000000000000000000000060208201529050610f84565b60388152602081017f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060208201529050610f84565b602a8152602081017f4552433732313a2062616c616e636520717565727920666f7220746865207a6581527f726f20616464726573730000000000000000000000000000000000000000000060208201529050610f84565b60298152602081017f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481527f656e7420746f6b656e000000000000000000000000000000000000000000000060208201529050610f84565b602c8152602081017f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881527f697374656e7420746f6b656e000000000000000000000000000000000000000060208201529050610f84565b602f8152602081017f4552433732314d657461646174613a2055524920717565727920666f72206e6f81527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060208201529050610f84565b60218152602081017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581527f720000000000000000000000000000000000000000000000000000000000000060208201529050610f84565b60318152602081017f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f81527f776e6572206e6f7220617070726f76656400000000000000000000000000000060208201529050610f84565b80610ece565b61130a8184610f0e565b90506106558183610f0e565b6020810161030c8284610ec5565b608081016113328287610ec5565b61133f6020830186610ec5565b61134c60408301856112fa565b818103606083015261135e8184610edc565b9695505050505050565b6020810161030c8284610ed4565b602080825281016106558184610edc565b6020808252810161030c81610f30565b6020808252810161030c81610f8a565b6020808252810161030c81610fe2565b6020808252810161030c81601981527f4552433732313a20617070726f766520746f2063616c6c657200000000000000602082015260400190565b6020808252810161030c8161103a565b6020808252810161030c81611092565b6020808252810161030c816110ea565b6020808252810161030c81611142565b6020808252810161030c8161119a565b6020808252810161030c816111f2565b6020808252810161030c8161124a565b6020808252810161030c816112a2565b6020810161030c82846112fa565b600061148b60405190565b90506114978282611580565b919050565b600067ffffffffffffffff8211156114b6576114b661163c565b601f19601f83011660200192915050565b600082198211156114da576114da6115fa565b500190565b6000826114ee576114ee611610565b500490565b600082821015611505576115056115fa565b500390565b60006001600160a01b03821661030c565b82818337506000910152565b60005b8381101561154257818101518382015260200161152a565b838111156105b65750506000910152565b60028104600182168061156757607f821691505b6020821081141561157a5761157a611626565b50919050565b601f19601f830116810181811067ffffffffffffffff821117156115a6576115a661163c565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115df576115df6115fa565b5060010190565b6000826115f5576115f5611610565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61165b8161150a565b811461166657600080fd5b50565b80151561165b565b7fffffffff00000000000000000000000000000000000000000000000000000000811661165b565b8061165b56fea264697066735822122071f4360378ba029b2bbbb3ae126524babdb49e0cdf24ed6b74e742a5252f1d9564736f6c63430008040033";

export class ERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
