/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001aea38038062001aea833981016040819052620000349162000175565b6200003f8162000046565b50620002b8565b80516200005b9060029060208401906200005f565b5050565b8280546200006d906200022c565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b60006200011c6200011684620001cc565b620001ad565b9050828152602081018484840111156200013557600080fd5b62000142848285620001f9565b509392505050565b600082601f8301126200015b578081fd5b81516200016d84826020860162000105565b949350505050565b60006020828403121562000187578081fd5b818101516001600160401b038111156200019f578182fd5b6200016d848285016200014a565b6000620001b960405190565b9050620001c782826200025d565b919050565b60006001600160401b03821115620001e857620001e8620002a2565b601f19601f83011660200192915050565b60005b8381101562000216578181015183820152602001620001fc565b8381111562000226576000848401525b50505050565b6002810460018216806200024157607f821691505b602082108114156200025757620002576200028c565b50919050565b601f19601f83011681016001600160401b0381118282101715620002855762000285620002a2565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61182280620002c86000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e9d565b61018c565b6040516100ac919061153b565b60405180910390f35b6100c86100c3366004610f29565b6101e6565b6040516100ac919061147c565b6100e86100e3366004610f6a565b6102c9565b6040516100ac919061148a565b610108610103366004610d62565b61035d565b005b61011d610118366004610ecb565b6103a9565b6040516100ac9190611446565b610108610138366004610e6f565b6104c9565b6100c861014b366004610d2a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610e1a565b6104d8565b60006001600160a01b0383166101bd5760405162461bcd60e51b81526004016101b4906114bb565b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061027957507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b806101e057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146101e0565b6060600280546102d890611634565b80601f016020809104026020016040519081016040528092919081815260200182805461030490611634565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103795750610379853361014b565b6103955760405162461bcd60e51b81526004016101b4906114eb565b6103a2858585858561051d565b5050505050565b606081518351146103cc5760405162461bcd60e51b81526004016101b49061151b565b6000835167ffffffffffffffff8111156103f657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561041f578160200160208202803683370190505b50905060005b84518110156104c15761048685828151811061045157634e487b7160e01b600052603260045260246000fd5b602002602001015185838151811061047957634e487b7160e01b600052603260045260246000fd5b602002602001015161018c565b8282815181106104a657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104ba8161168e565b9050610425565b509392505050565b6104d43383836106d5565b5050565b6001600160a01b0385163314806104f457506104f4853361014b565b6105105760405162461bcd60e51b81526004016101b4906114cb565b6103a28585858585610796565b815183511461053e5760405162461bcd60e51b81526004016101b49061152b565b6001600160a01b0384166105645760405162461bcd60e51b81526004016101b4906114db565b3360005b845181101561066757600085828151811061059357634e487b7160e01b600052603260045260246000fd5b6020026020010151905060008583815181106105bf57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561060f5760405162461bcd60e51b81526004016101b4906114fb565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b1682528120805484929061064c9084906115cf565b92505081905550505050806106609061168e565b9050610568565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516106b7929190611457565b60405180910390a46106cd8187878787876108c8565b505050505050565b816001600160a01b0316836001600160a01b031614156107075760405162461bcd60e51b81526004016101b49061150b565b6001600160a01b038381166000818152600160209081526040808320948716808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061078990859061147c565b60405180910390a3505050565b6001600160a01b0384166107bc5760405162461bcd60e51b81526004016101b4906114db565b336107d58187876107cc88610a30565b6103a288610a30565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156108165760405162461bcd60e51b81526004016101b4906114fb565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108539084906115cf565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6288886040516108a9929190611549565b60405180910390a46108bf828888888888610a89565b50505050505050565b6001600160a01b0384163b156106cd576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190610925908990899088908890889060040161139f565b602060405180830381600087803b15801561093f57600080fd5b505af192505050801561096f575060408051601f3d908101601f1916820190925261096c91810190610f4d565b60015b6109cf5761097b611709565b806308c379a014156109b55750610990611721565b8061099b57506109b7565b8060405162461bcd60e51b81526004016101b4919061148a565b505b60405162461bcd60e51b81526004016101b49061149b565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c8100000000000000000000000000000000000000000000000000000000146108bf5760405162461bcd60e51b81526004016101b4906114ab565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a7857634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b6001600160a01b0384163b156106cd576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e6190610ae690899089908890889088906004016113ff565b602060405180830381600087803b158015610b0057600080fd5b505af1925050508015610b30575060408051601f3d908101601f19168201909252610b2d91810190610f4d565b60015b610b3c5761097b611709565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e6100000000000000000000000000000000000000000000000000000000146108bf5760405162461bcd60e51b81526004016101b4906114ab565b6000610bb0610bab84611580565b611564565b90508083825260208201905082856020860285011115610bcf57600080fd5b60005b85811015610bf957610be48783610c8b565b83526020928301929190910190600101610bd2565b5050509392505050565b6000610c11610bab84611580565b90508083825260208201905082856020860285011115610c3057600080fd5b60005b85811015610bf957610c458783610d1f565b83526020928301929190910190600101610c33565b6000610c68610bab846115a4565b905082815260208101848484011115610c8057600080fd5b6104c18482856115f8565b80356101e08161179f565b600082601f830112610ca6578081fd5b8135610cb6848260208601610b9d565b949350505050565b600082601f830112610cce578081fd5b8135610cb6848260208601610c03565b80356101e0816117b6565b80356101e0816117be565b80516101e0816117be565b600082601f830112610d0f578081fd5b8135610cb6848260208601610c5a565b80356101e0816117e6565b60008060408385031215610d3c578182fd5b610d4884838501610c8b565b91506020610d5885828601610c8b565b9150509250929050565b600080600080600060a08688031215610d79578081fd5b610d8587828801610c8b565b94506020610d9588828901610c8b565b945050604086013567ffffffffffffffff811115610db1578182fd5b610dbd88828901610cbe565b935050606086013567ffffffffffffffff811115610dd9578182fd5b610de588828901610cbe565b925050608086013567ffffffffffffffff811115610e01578182fd5b610e0d88828901610cff565b9150509295509295909350565b600080600080600060a08688031215610e31578081fd5b610e3d87828801610c8b565b94506020610e4d88828901610c8b565b9450506040610e5e88828901610d1f565b9350506060610de588828901610d1f565b60008060408385031215610e81578182fd5b610e8d84838501610c8b565b91506020610d5885828601610cde565b60008060408385031215610eaf578182fd5b610ebb84838501610c8b565b91506020610d5885828601610d1f565b60008060408385031215610edd578182fd5b8183013567ffffffffffffffff811115610ef5578283fd5b610f0185828601610c96565b925050602083013567ffffffffffffffff811115610f1d578182fd5b610d5885828601610cbe565b600060208284031215610f3a578081fd5b610f4683828401610ce9565b9392505050565b600060208284031215610f5e578081fd5b610f4683828401610cf4565b600060208284031215610f7b578081fd5b610f4683828401610d1f565b610f918282611399565b5060200190565b610fa1816115e7565b82525050565b6000610fb1825190565b8084526020938401938301825b82811015610fe3578151610fd28782610f87565b965050602082019150600101610fbe565b5093949350505050565b801515610fa1565b6000610fff825190565b808452602084019350611016818560208601611604565b601f01601f19169290920192915050565b60348152602081017f455243313135353a207472616e7366657220746f206e6f6e204552433131353581527f526563656976657220696d706c656d656e746572000000000000000000000000602082015290505b60400190565b60288152602081017f455243313135353a204552433131353552656365697665722072656a6563746581527f6420746f6b656e730000000000000000000000000000000000000000000000006020820152905061107b565b602b8152602081017f455243313135353a2062616c616e636520717565727920666f7220746865207a81527f65726f20616464726573730000000000000000000000000000000000000000006020820152905061107b565b60298152602081017f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7281527f20617070726f76656400000000000000000000000000000000000000000000006020820152905061107b565b60258152602081017f455243313135353a207472616e7366657220746f20746865207a65726f20616481527f64726573730000000000000000000000000000000000000000000000000000006020820152905061107b565b60328152602081017f455243313135353a207472616e736665722063616c6c6572206973206e6f742081527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006020820152905061107b565b602a8152602081017f455243313135353a20696e73756666696369656e742062616c616e636520666f81527f72207472616e73666572000000000000000000000000000000000000000000006020820152905061107b565b60298152602081017f455243313135353a2073657474696e6720617070726f76616c2073746174757381527f20666f722073656c6600000000000000000000000000000000000000000000006020820152905061107b565b60298152602081017f455243313135353a206163636f756e747320616e6420696473206c656e67746881527f206d69736d6174636800000000000000000000000000000000000000000000006020820152905061107b565b60288152602081017f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682081527f6d69736d617463680000000000000000000000000000000000000000000000006020820152905061107b565b80610fa1565b60a081016113ad8288610f98565b6113ba6020830187610f98565b81810360408301526113cc8186610fa7565b905081810360608301526113e08185610fa7565b905081810360808301526113f48184610ff5565b979650505050505050565b60a0810161140d8288610f98565b61141a6020830187610f98565b6114276040830186611399565b6114346060830185611399565b81810360808301526113f48184610ff5565b60208082528101610f468184610fa7565b604080825281016114688185610fa7565b90508181036020830152610cb68184610fa7565b602081016101e08284610fed565b60208082528101610f468184610ff5565b602080825281016101e081611027565b602080825281016101e081611081565b602080825281016101e0816110d9565b602080825281016101e081611131565b602080825281016101e081611189565b602080825281016101e0816111e1565b602080825281016101e081611239565b602080825281016101e081611291565b602080825281016101e0816112e9565b602080825281016101e081611341565b602081016101e08284611399565b604081016115578285611399565b610f466020830184611399565b600061156f60405190565b905061157b8282611661565b919050565b600067ffffffffffffffff82111561159a5761159a6116f3565b5060209081020190565b600067ffffffffffffffff8211156115be576115be6116f3565b601f19601f83011660200192915050565b600082198211156115e2576115e26116c7565b500190565b60006001600160a01b0382166101e0565b82818337506000910152565b60005b8381101561161f578181015183820152602001611607565b8381111561162e576000848401525b50505050565b60028104600182168061164857607f821691505b6020821081141561165b5761165b6116dd565b50919050565b601f19601f830116810181811067ffffffffffffffff82111715611687576116876116f3565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116c0576116c06116c7565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d111561171e57600481823e5160e01c5b90565b600060443d101561172f5790565b60405160043d036004823e80513d602482011167ffffffffffffffff8211171561175857505090565b808201805167ffffffffffffffff811115611774575050505090565b80602083010160043d03850181111561178f57505050505090565b506104c181602001840185611661565b6117a8816115e7565b81146117b357600080fd5b50565b8015156117a8565b7fffffffff0000000000000000000000000000000000000000000000000000000081166117a8565b806117a856fea26469706673582212205cd9b714cb9ba4003af4cfc98d2271dbb42d715687a204fcd3adc4059b8fa11964736f6c63430008040033";

export class ERC1155__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
