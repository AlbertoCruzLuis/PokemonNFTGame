/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PokemonData, PokemonDataInterface } from "../PokemonData";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "hp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
        ],
        internalType: "struct LPokemonData.Stats",
        name: "stats_",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "attack",
        type: "uint256",
      },
    ],
    name: "changeAttack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "experience",
        type: "uint256",
      },
    ],
    name: "changeExperience",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hp",
        type: "uint256",
      },
    ],
    name: "changeHp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "hp",
        type: "uint256",
      },
    ],
    name: "changeHpIncrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "changeLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maxHp",
        type: "uint256",
      },
    ],
    name: "changeMaxHp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "hp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
        ],
        internalType: "struct LPokemonData.Stats",
        name: "stats_",
        type: "tuple",
      },
    ],
    name: "changeStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalExperience",
        type: "uint256",
      },
    ],
    name: "changeTotalExperience",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "hp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
        ],
        internalType: "struct LPokemonData.Stats",
        name: "stats_",
        type: "tuple",
      },
    ],
    name: "createPokemonData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
        ],
        internalType: "struct LPokemonData.Info",
        name: "info",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "hp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
        ],
        internalType: "struct LPokemonData.Stats",
        name: "stats",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "experience",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalExperience",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAttack",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getData",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "imageURI",
                type: "string",
              },
            ],
            internalType: "struct LPokemonData.Info",
            name: "info",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "hp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxHp",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "attack",
                type: "uint256",
              },
            ],
            internalType: "struct LPokemonData.Stats",
            name: "stats",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "experience",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalExperience",
            type: "uint256",
          },
        ],
        internalType: "struct LPokemonData.Data",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExperience",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImageUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "imageURI",
            type: "string",
          },
        ],
        internalType: "struct LPokemonData.Info",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMaxHp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "hp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxHp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
        ],
        internalType: "struct LPokemonData.Stats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalExperience",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200181b3803806200181b833981810160405281019062000037919062000292565b6200004b848484846200005560201b60201c565b5050505062000484565b836000800160000181905550826000800160010190805190602001906200007e929190620000f5565b50816000800160020190805190602001906200009c929190620000f5565b508060000151600060030160000181905550806040015160006003016002018190555080602001516000600301600101819055506001600060060181905550600080600701819055506000806008018190555050505050565b8280546200010390620003c3565b90600052602060002090601f01602090048101928262000127576000855562000173565b82601f106200014257805160ff191683800117855562000173565b8280016001018555821562000173579182015b828111156200017257825182559160200191906001019062000155565b5b50905062000182919062000186565b5090565b5b80821115620001a157600081600090555060010162000187565b5090565b6000620001bc620001b6846200034f565b62000326565b905082815260208101848484011115620001d557600080fd5b620001e28482856200038d565b509392505050565b600082601f830112620001fb578081fd5b81516200020d848260208601620001a5565b91505092915050565b60006060828403121562000228578081fd5b62000234606062000326565b9050600062000246848285016200027b565b818301525060206200025b848285016200027b565b8183015250604062000270848285016200027b565b818301525092915050565b6000815190506200028c816200046a565b92915050565b60008060008060c08587031215620002a8578384fd5b620002b6868587016200027b565b9350602085015160018060401b03811115620002d0578384fd5b620002de87828801620001ea565b935050604085015160018060401b03811115620002f9578283fd5b6200030787828801620001ea565b92505060606200031a8782880162000216565b91505092959194509250565b60006200033262000345565b9050620003408282620003f9565b919050565b6000604051905090565b600060018060401b038211156200036b576200036a62000443565b5b620003768262000459565b9050602081019050919050565b6000819050919050565b60005b83811015620003ad57808201518184015260208101905062000390565b83811115620003bd576000848401525b50505050565b60006002820490506001821680620003dc57607f821691505b60208210811415620003f357620003f26200042d565b5b50919050565b620004048262000459565b810181811060018060401b038211171562000424576200042362000443565b5b80604052505050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000601f19601f8301169050919050565b620004758162000383565b81146200048157600080fd5b50565b61138780620004946000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80639be55e00116100d8578063c59d48471161008c578063ed73fc4b11610066578063ed73fc4b146103b5578063ede641a4146103d3578063f6a0e867146103ef57610182565b8063c59d48471461035d578063cdb986cc1461037b578063e2b767361461039957610182565b8063abd708ef116100bd578063abd708ef14610307578063b2823c9f14610325578063c57e4a991461034157610182565b80639be55e00146102cd578063a5985e8c146102e957610182565b806346bd9a661161013a5780635d1ca631116101145780635d1ca6311461027157806373d4a13a1461028f5780638ce802e0146102b157610182565b806346bd9a66146102195780635143e01a146102375780635a9b0b891461025357610182565b806317d7de7c1161016b57806317d7de7c146101bf578063296f23f9146101dd5780633bc5de30146101fb57610182565b806306d8652f146101875780630b5270a7146101a3575b600080fd5b6101a1600480360381019061019c9190610df6565b61040d565b005b6101bd60048036038101906101b89190610df6565b61041d565b005b6101c761042a565b6040516101d4919061102f565b60405180910390f35b6101e56104c1565b6040516101f2919061110a565b60405180910390f35b6102036104d0565b6040516102109190611051565b60405180910390f35b61022161067c565b60405161022e919061102f565b60405180910390f35b610251600480360381019061024c9190610df6565b610713565b005b61025b610723565b6040516102689190611073565b60405180910390f35b61027961086d565b604051610286919061110a565b60405180910390f35b61029761087c565b6040516102a8959493929190611095565b60405180910390f35b6102cb60048036038101906102c69190610dd1565b610a00565b005b6102e760048036038101906102e29190610df6565b610a36565b005b6102f1610a43565b6040516102fe919061110a565b60405180910390f35b61030f610a4f565b60405161031c919061110a565b60405180910390f35b61033f600480360381019061033a9190610df6565b610a5e565b005b61035b60048036038101906103569190610e1b565b610abe565b005b610365610b5a565b60405161037291906110ef565b60405180910390f35b610383610b95565b604051610390919061110a565b60405180910390f35b6103b360048036038101906103ae9190610df6565b610ba1565b005b6103bd610bb1565b6040516103ca919061110a565b60405180910390f35b6103ed60048036038101906103e89190610df6565b610bbd565b005b6103f7610bca565b604051610404919061110a565b60405180910390f35b8060006003016001018190555050565b8060006006018190555050565b606060008001600101805461043e90611239565b80601f016020809104026020016040519081016040528092919081815260200182805461046a90611239565b80156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b5050505050905090565b60008060030160010154905090565b6104d8610bd9565b60006040518060a0016040529081600082016040518060600160405290816000820154815260200160018201805461050f90611239565b80601f016020809104026020016040519081016040528092919081815260200182805461053b90611239565b80156105885780601f1061055d57610100808354040283529160200191610588565b820191906000526020600020905b81548152906001019060200180831161056b57829003601f168201915b505050505081526020016002820180546105a190611239565b80601f01602080910402602001604051908101604052809291908181526020018280546105cd90611239565b801561061a5780601f106105ef5761010080835404028352916020019161061a565b820191906000526020600020905b8154815290600101906020018083116105fd57829003601f168201915b505050505081525050815260200160038201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020016006820154815260200160078201548152602001600882015481525050905090565b606060008001600201805461069090611239565b80601f01602080910402602001604051908101604052809291908181526020018280546106bc90611239565b80156107095780601f106106de57610100808354040283529160200191610709565b820191906000526020600020905b8154815290600101906020018083116106ec57829003601f168201915b5050505050905090565b8060006003016002018190555050565b61072b610c14565b600080016040518060600160405290816000820154815260200160018201805461075490611239565b80601f016020809104026020016040519081016040528092919081815260200182805461078090611239565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b505050505081526020016002820180546107e690611239565b80601f016020809104026020016040519081016040528092919081815260200182805461081290611239565b801561085f5780601f106108345761010080835404028352916020019161085f565b820191906000526020600020905b81548152906001019060200180831161084257829003601f168201915b505050505081525050905090565b60008060000160000154905090565b600080600001604051806060016040529081600082015481526020016001820180546108a790611239565b80601f01602080910402602001604051908101604052809291908181526020018280546108d390611239565b80156109205780601f106108f557610100808354040283529160200191610920565b820191906000526020600020905b81548152906001019060200180831161090357829003601f168201915b5050505050815260200160028201805461093990611239565b80601f016020809104026020016040519081016040528092919081815260200182805461096590611239565b80156109b25780601f10610987576101008083540402835291602001916109b2565b820191906000526020600020905b81548152906001019060200180831161099557829003601f168201915b50505050508152505090806003016040518060600160405290816000820154815260200160018201548152602001600282015481525050908060060154908060070154908060080154905085565b80600001516000600301600001819055508060200151600060030160010181905550806040015160006003016002018190555050565b8060006008018190555050565b60008060060154905090565b60008060030160000154905090565b60006003016001015481600060030160000154610a7b9190611197565b1115610a9b57600060030160010154600060030160000181905550610abb565b8060006003016000016000828254610ab39190611197565b925050819055505b50565b83600080016000018190555082600080016001019080519060200190610ae5929190610c35565b5081600080016002019080519060200190610b01929190610c35565b508060000151600060030160000181905550806040015160006003016002018190555080602001516000600301600101819055506001600060060181905550600080600701819055506000806008018190555050505050565b610b62610cbb565b60006003016040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b60008060070154905090565b8060006003016000018190555050565b60008060080154905090565b8060006007018190555050565b60008060030160020154905090565b6040518060a00160405280610bec610c14565b8152602001610bf9610cbb565b81526020016000815260200160008152602001600081525090565b60405180606001604052806000815260200160608152602001606081525090565b828054610c4190611239565b90600052602060002090601f016020900481019282610c635760008555610caa565b82601f10610c7c57805160ff1916838001178555610caa565b82800160010185558215610caa579182015b82811115610ca9578251825591602001919060010190610c8e565b5b509050610cb79190610cdc565b5090565b60405180606001604052806000815260200160008152602001600081525090565b5b80821115610cf5576000816000905550600101610cdd565b5090565b6000610d0c610d078461114a565b611125565b905082815260208101848484011115610d2457600080fd5b610d2f8482856111f7565b509392505050565b600082601f830112610d47578081fd5b8135610d57848260208601610cf9565b91505092915050565b600060608284031215610d71578081fd5b610d7b6060611125565b90506000610d8b84828501610dbc565b81830152506020610d9e84828501610dbc565b81830152506040610db184828501610dbc565b818301525092915050565b600081359050610dcb8161133a565b92915050565b600060608284031215610de2578081fd5b610dee83828401610d60565b905092915050565b600060208284031215610e07578081fd5b610e1383828401610dbc565b905092915050565b60008060008060c08587031215610e30578283fd5b610e3c86848701610dbc565b9350602085013567ffffffffffffffff811115610e57578384fd5b610e6387828801610d37565b935050604085013567ffffffffffffffff811115610e7f578283fd5b610e8b87828801610d37565b9250506060610e9c87828801610d60565b91505092959194509250565b6000610eb38261117b565b610ebd8185611186565b9350610ecd818560208601611206565b610ed681611329565b840191505092915050565b6000610eec8261117b565b610ef68185611186565b9350610f06818560208601611206565b610f0f81611329565b840191505092915050565b600060e083018183015184820383860152610f358282610f8e565b9150506020830151610f4a6020860182610fe3565b506040830151610f5d6080860182611020565b506060830151610f7060a0860182611020565b506080830151610f8360c0860182611020565b508091505092915050565b60006060830181830151610fa483860182611020565b5060208301518482036020860152610fbc8282610ea8565b91505060408301518482036040860152610fd68282610ea8565b9150508091505092915050565b6000810151610ff56000840182611020565b5060208101516110086020840182611020565b50604081015161101b6040840182611020565b505050565b611029816111ed565b82525050565b600060208201905081810360008301526110498184610ee1565b905092915050565b6000602082019050818103600083015261106b8184610f1a565b905092915050565b6000602082019050818103600083015261108d8184610f8e565b905092915050565b600060e08201905081810360008301526110af8188610f8e565b90506110be6020830187610fe3565b6110cb6080830186611020565b6110d860a0830185611020565b6110e560c0830184611020565b9695505050505050565b60006060820190506111046000830184610fe3565b92915050565b600060208201905061111f6000830184611020565b92915050565b600061112f611140565b905061113b828261126b565b919050565b6000604051905090565b600067ffffffffffffffff821115611165576111646112fa565b5b61116e82611329565b9050602081019050919050565b600081519050919050565b818152600060208201905092915050565b6111a0816111ed565b90506111ab826111ed565b91506000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111e2576111e161129c565b5b828201905092915050565b6000819050919050565b82818337600083830152505050565b60005b83811015611224578082015181840152602081019050611209565b83811115611233576000848401525b50505050565b6000600282049050600182168061125157607f821691505b60208210811415611265576112646112cb565b5b50919050565b61127482611329565b810181811067ffffffffffffffff82111715611293576112926112fa565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b611343816111ed565b811461134e57600080fd5b5056fea264697066735822122018f333857921850e6bd0e214ea4a819e0cad40cc760c04254344b25c3895484964736f6c63430008040033";

export class PokemonData__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    id: BigNumberish,
    name: string,
    imageURI: string,
    stats_: { hp: BigNumberish; maxHp: BigNumberish; attack: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PokemonData> {
    return super.deploy(
      id,
      name,
      imageURI,
      stats_,
      overrides || {}
    ) as Promise<PokemonData>;
  }
  getDeployTransaction(
    id: BigNumberish,
    name: string,
    imageURI: string,
    stats_: { hp: BigNumberish; maxHp: BigNumberish; attack: BigNumberish },
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id,
      name,
      imageURI,
      stats_,
      overrides || {}
    );
  }
  attach(address: string): PokemonData {
    return super.attach(address) as PokemonData;
  }
  connect(signer: Signer): PokemonData__factory {
    return super.connect(signer) as PokemonData__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PokemonDataInterface {
    return new utils.Interface(_abi) as PokemonDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PokemonData {
    return new Contract(address, _abi, signerOrProvider) as PokemonData;
  }
}
