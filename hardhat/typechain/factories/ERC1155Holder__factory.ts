/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Holder, ERC1155HolderInterface } from "../ERC1155Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610578806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006f578063f23a6e61146100b4575b600080fd5b61005961005436600461039a565b6100ec565b60405161006691906103f0565b60405180910390f35b6100a761007d36600461028d565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b60405161006691906103fe565b6100a76100c2366004610345565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061017f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b600061019861019384610428565b61040c565b905080838252602082019050828560208602850111156101b757600080fd5b60005b858110156101e1576101cc8783610282565b835260209283019291909101906001016101ba565b5050509392505050565b60006101f96101938461044c565b90508281526020810184848401111561021157600080fd5b61021c848285610495565b509392505050565b803561017f816104fd565b600082601f83011261023f578081fd5b813561024f848260208601610185565b949350505050565b803561017f81610514565b600082601f830112610272578081fd5b813561024f8482602086016101eb565b803561017f8161053c565b600080600080600060a086880312156102a4578081fd5b6102b087828801610224565b945060206102c088828901610224565b945050604086013567ffffffffffffffff8111156102dc578182fd5b6102e88882890161022f565b935050606086013567ffffffffffffffff811115610304578182fd5b6103108882890161022f565b925050608086013567ffffffffffffffff81111561032c578182fd5b61033888828901610262565b9150509295509295909350565b600080600080600060a0868803121561035c578081fd5b61036887828801610224565b9450602061037888828901610224565b945050604061038988828901610282565b935050606061031088828901610282565b6000602082840312156103ab578081fd5b6103b783828401610257565b9392505050565b8015155b82525050565b7fffffffff0000000000000000000000000000000000000000000000000000000081166103c2565b6020810161017f82846103be565b6020810161017f82846103c8565b600061041760405190565b905061042382826104a1565b919050565b600067ffffffffffffffff821115610442576104426104ce565b5060209081020190565b600067ffffffffffffffff821115610466576104666104ce565b601f19601f83011660200192915050565b600073ffffffffffffffffffffffffffffffffffffffff821661017f565b82818337506000910152565b601f19601f830116810181811067ffffffffffffffff821117156104c7576104c76104ce565b6040525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61050681610477565b811461051157600080fd5b50565b7fffffffff000000000000000000000000000000000000000000000000000000008116610506565b8061050656fea26469706673582212204a75a271f534011a073e891cf3ed72e7aaf295799e9cf224da038da8eb2c004d64736f6c63430008040033";

export class ERC1155Holder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Holder> {
    return super.deploy(overrides || {}) as Promise<ERC1155Holder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Holder {
    return super.attach(address) as ERC1155Holder;
  }
  connect(signer: Signer): ERC1155Holder__factory {
    return super.connect(signer) as ERC1155Holder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderInterface {
    return new utils.Interface(_abi) as ERC1155HolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Holder;
  }
}
