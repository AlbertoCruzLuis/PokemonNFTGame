/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e2938038062000e2983398101604081905262000034916200017e565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b505050620002f8565b82805462000076906200026c565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b6000620001256200011f846200020c565b620001ed565b9050828152602081018484840111156200013e57600080fd5b6200014b84828562000239565b509392505050565b600082601f83011262000164578081fd5b8151620001768482602086016200010e565b949350505050565b6000806040838503121562000191578182fd5b828201516001600160401b03811115620001a9578283fd5b620001b78582860162000153565b602085015190935090506001600160401b03811115620001d5578182fd5b620001e38582860162000153565b9150509250929050565b6000620001f960405190565b90506200020782826200029d565b919050565b60006001600160401b03821115620002285762000228620002e2565b601f19601f83011660200192915050565b60005b83811015620002565781810151838201526020016200023c565b8381111562000266576000848401525b50505050565b6002810460018216806200028157607f821691505b60208210811415620002975762000297620002cc565b50919050565b601f19601f83011681016001600160401b0381118282101715620002c557620002c5620002e2565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610b2180620003086000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610183578063a9059cbb14610196578063dd62ed3e146101a957600080fd5b8063395093511461013f57806370a082311461015257806395d89b411461017b57600080fd5b806318160ddd116100b257806318160ddd1461010c57806323b872dd1461011d578063313ce5671461013057600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d66101e2565b6040516100e39190610926565b60405180910390f35b6100ff6100fa36600461066f565b610274565b6040516100e39190610918565b6002545b6040516100e391906109d2565b6100ff61012b366004610624565b61028e565b60126040516100e391906109e0565b6100ff61014d36600461066f565b6102b2565b6101106101603660046105c8565b6001600160a01b031660009081526020819052604090205490565b6100d66102f1565b6100ff61019136600461066f565b610300565b6100ff6101a436600461066f565b61035d565b6101106101b73660046105ec565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f190610a43565b80601f016020809104026020016040519081016040528092919081815260200182805461021d90610a43565b801561026a5780601f1061023f5761010080835404028352916020019161026a565b820191906000526020600020905b81548152906001019060200180831161024d57829003601f168201915b5050505050905090565b60003361028281858561036b565b60019150505b92915050565b60003361029c85828561041f565b6102a785858561049f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061028290829086906102ec9087906109ee565b61036b565b6060600480546101f190610a43565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103505760405162461bcd60e51b8152600401610347906109c2565b60405180910390fd5b6102a7828686840361036b565b60003361028281858561049f565b6001600160a01b0383166103915760405162461bcd60e51b8152600401610347906109b2565b6001600160a01b0382166103b75760405162461bcd60e51b815260040161034790610947565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104129085906109d2565b60405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610499578181101561048c5760405162461bcd60e51b815260040161034790610957565b610499848484840361036b565b50505050565b6001600160a01b0383166104c55760405162461bcd60e51b8152600401610347906109a2565b6001600160a01b0382166104eb5760405162461bcd60e51b815260040161034790610937565b6001600160a01b038316600090815260208190526040902054818110156105245760405162461bcd60e51b815260040161034790610992565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061055b9084906109ee565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105a591906109d2565b60405180910390a3610499565b803561028881610ace565b803561028881610ae5565b6000602082840312156105d9578081fd5b6105e5838284016105b2565b9392505050565b600080604083850312156105fe578081fd5b61060a848285016105b2565b9150602061061a858286016105b2565b9150509250929050565b600080600060608486031215610638578081fd5b610644858286016105b2565b92506020610654868287016105b2565b9250506040610665868287016105bd565b9150509250925092565b60008060408385031215610681578182fd5b61068d848385016105b2565b9150602061061a858286016105bd565b8015155b82525050565b60006106b1825190565b8084526020840193506106c8818560208601610a17565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b60238152602081017f45524332303a207472616e7366657220746f20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015290505b60400190565b60228152602081017f45524332303a20617070726f766520746f20746865207a65726f20616464726581527f73730000000000000000000000000000000000000000000000000000000000006020820152905061074b565b60268152602081017f45524332303a207472616e7366657220616d6f756e742065786365656473206281527f616c616e636500000000000000000000000000000000000000000000000000006020820152905061074b565b60258152602081017f45524332303a207472616e736665722066726f6d20746865207a65726f20616481527f64726573730000000000000000000000000000000000000000000000000000006020820152905061074b565b60248152602081017f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481527f72657373000000000000000000000000000000000000000000000000000000006020820152905061074b565b60258152602081017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7781527f207a65726f0000000000000000000000000000000000000000000000000000006020820152905061074b565b806106a1565b60ff81166106a1565b60208101610288828461069d565b602080825281016105e581846106a7565b60208082528101610288816106f7565b6020808252810161028881610751565b6020808252810161028881601d81527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000602082015260400190565b60208082528101610288816107a9565b6020808252810161028881610801565b6020808252810161028881610859565b60208082528101610288816108b1565b602081016102888284610909565b60208101610288828461090f565b60008219821115610a0157610a01610a70565b500190565b60006001600160a01b038216610288565b60005b83811015610a32578181015183820152602001610a1a565b838111156104995750506000910152565b600281046001821680610a5757607f821691505b60208210811415610a6a57610a6a610a9f565b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b610ad781610a06565b8114610ae257600080fd5b50565b80610ad756fea2646970667358221220878cd9c85e783b943469c7d18756697be2105db90b66a7f1be0bf305df0737fd64736f6c63430008040033";

export class ERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
