/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200169038038062001690833981810160405281019062000037919062000192565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b50505062000337565b8280546200007f9062000290565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b600062000138620001328462000226565b620001fd565b9050828152602081018484840111156200015157600080fd5b6200015e8482856200025a565b509392505050565b600082601f83011262000177578081fd5b81516200018984826020860162000121565b91505092915050565b60008060408385031215620001a5578182fd5b8183015160018060401b03811115620001bc578283fd5b620001ca8582860162000166565b925050602083015160018060401b03811115620001e5578182fd5b620001f38582860162000166565b9150509250929050565b6000620002096200021c565b9050620002178282620002c6565b919050565b6000604051905090565b600060018060401b0382111562000242576200024162000310565b5b6200024d8262000326565b9050602081019050919050565b60005b838110156200027a5780820151818401526020810190506200025d565b838111156200028a576000848401525b50505050565b60006002820490506001821680620002a957607f821691505b60208210811415620002c057620002bf620002fa565b5b50919050565b620002d18262000326565b810181811060018060401b0382111715620002f157620002f062000310565b5b80604052505050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000601f19601f8301169050919050565b61134980620003476000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610206578063a9059cbb14610236578063dd62ed3e14610266576100c9565b8063395093511461018857806370a08231146101b857806395d89b41146101e8576100c9565b806318160ddd116100b257806318160ddd1461011c57806323b872dd1461013a578063313ce5671461016a576100c9565b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610296565b6040516100e39190610e0f565b60405180910390f35b61010660048036038101906101019190610c61565b610328565b6040516101139190610df4565b60405180910390f35b61012461034b565b6040516101319190610f11565b60405180910390f35b610154600480360381019061014f9190610c16565b610355565b6040516101619190610df4565b60405180910390f35b610172610384565b60405161017f9190610f2c565b60405180910390f35b6101a2600480360381019061019d9190610c61565b61038d565b6040516101af9190610df4565b60405180910390f35b6101d260048036038101906101cd9190610bb9565b610437565b6040516101df9190610f11565b60405180910390f35b6101f061047f565b6040516101fd9190610e0f565b60405180910390f35b610220600480360381019061021b9190610c61565b610511565b60405161022d9190610df4565b60405180910390f35b610250600480360381019061024b9190610c61565b6105fb565b60405161025d9190610df4565b60405180910390f35b610280600480360381019061027b9190610bde565b61061e565b60405161028d9190610f11565b60405180910390f35b6060600380546102a590611041565b80601f01602080910402602001604051908101604052809291908181526020018280546102d190611041565b801561031e5780601f106102f35761010080835404028352916020019161031e565b820191906000526020600020905b81548152906001019060200180831161030157829003601f168201915b5050505050905090565b6000806103336106a5565b90506103408185856106ad565b600191505092915050565b6000600254905090565b6000806103606106a5565b905061036d858285610878565b610378858585610904565b60019150509392505050565b60006012905090565b6000806103986106a5565b905061042c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104279190610f63565b6106ad565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461048e90611041565b80601f01602080910402602001604051908101604052809291908181526020018280546104ba90611041565b80156105075780601f106104dc57610100808354040283529160200191610507565b820191906000526020600020905b8154815290600101906020018083116104ea57829003601f168201915b5050505050905090565b60008061051c6106a5565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d990610ef1565b60405180910390fd5b6105ef82868684036106ad565b60019250505092915050565b6000806106066106a5565b9050610613818585610904565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490610ed1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490610e51565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161086b9190610f11565b60405180910390a3505050565b6000610884848461061e565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108fe57818110156108f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e790610e71565b60405180910390fd5b6108fd84848484036106ad565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90610eb1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109db90610e31565b60405180910390fd5b6109ef838383610b85565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6c90610e91565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b089190610f63565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b6c9190610f11565b60405180910390a3610b7f848484610b8a565b50505050565b505050565b505050565b600081359050610b9e816112e5565b92915050565b600081359050610bb3816112fc565b92915050565b600060208284031215610bca578081fd5b610bd683828401610b8f565b905092915050565b60008060408385031215610bf0578081fd5b610bfc84828501610b8f565b91506020610c0c85828601610b8f565b9150509250929050565b600080600060608486031215610c2a578081fd5b610c3685828601610b8f565b92506020610c4686828701610b8f565b9250506040610c5786828701610ba4565b9150509250925092565b60008060408385031215610c73578182fd5b610c7f84838501610b8f565b91506020610c8f85828601610ba4565b9150509250929050565b610ca281610fcb565b82525050565b6000610cb382610f47565b610cbd8185610f52565b9350610ccd81856020860161100e565b610cd6816110d1565b840191505092915050565b610cec602382610f52565b9050610cf7816110e2565b6000604082019050919050565b610d0f602282610f52565b9050610d1a81611131565b6000604082019050919050565b610d32601d82610f52565b9050610d3d81611180565b6000602082019050919050565b610d55602682610f52565b9050610d60816111a9565b6000604082019050919050565b610d78602582610f52565b9050610d83816111f8565b6000604082019050919050565b610d9b602482610f52565b9050610da681611247565b6000604082019050919050565b610dbe602582610f52565b9050610dc981611296565b6000604082019050919050565b610ddf81610ff7565b82525050565b610dee81611001565b82525050565b6000602082019050610e096000830184610c99565b92915050565b60006020820190508181036000830152610e298184610ca8565b905092915050565b60006020820190508181036000830152610e4a81610ce1565b9050919050565b60006020820190508181036000830152610e6a81610d04565b9050919050565b60006020820190508181036000830152610e8a81610d27565b9050919050565b60006020820190508181036000830152610eaa81610d4a565b9050919050565b60006020820190508181036000830152610eca81610d6d565b9050919050565b60006020820190508181036000830152610eea81610d90565b9050919050565b60006020820190508181036000830152610f0a81610db3565b9050919050565b6000602082019050610f266000830184610dd6565b92915050565b6000602082019050610f416000830184610de5565b92915050565b600081519050919050565b818152600060208201905092915050565b610f6c81610ff7565b9050610f7782610ff7565b91506000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fae57610fad611073565b5b828201905092915050565b6000610fc482610fd7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561102c578082015181840152602081019050611011565b8381111561103b576000848401525b50505050565b6000600282049050600182168061105957607f821691505b6020821081141561106d5761106c6110a2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6112ee81610fb9565b81146112f957600080fd5b50565b61130581610ff7565b811461131057600080fd5b5056fea26469706673582212209f7ea37a0263826d6fc59afee7dc73f58bb4b63615f3ec7a7108f9b5b5f7318364736f6c63430008040033";

export class ERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
